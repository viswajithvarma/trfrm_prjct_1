# testing to see how it works
name: 'Terraform Plan'

on:
  pull_request:
    branches:
      - main
    paths:
      - 'environments/**'
      - 'modules/**'
      - '.github/workflows/terraform-*.yml'

env:
  TF_VERSION: '1.6.2'
  WORKING_DIRECTORY: './environments/dev'

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Setup Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    # Authenticate to Google Cloud using Workload Identity Federation (recommended)
    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

    # Set up Cloud SDK
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    # Verify authentication
    - name: 'Verify authentication'
      run: |
        gcloud auth list
        gcloud config list project

    # Initialize a new or existing Terraform working directory
    - name: Terraform Init
      run: terraform init

    # Validate terraform files
    - name: Terraform Validate
      run: terraform validate

    # Format check
    - name: Terraform Format Check
      run: terraform fmt -check -recursive

    # Generate an execution plan for Terraform
    - name: Terraform Plan
      run: |
        terraform plan \
          -var="owner_email=${{ secrets.OWNER_EMAIL }}" \
          -var="db_password=${{ secrets.DB_PASSWORD }}" \
          -out=tfplan \
          -no-color
      env:
        TF_IN_AUTOMATION: true

    # Save plan to PR comment
    - name: Update Pull Request
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          
          <details><summary>Show Plan</summary>
          
          \`\`\`terraform
          ${process.env.PLAN}
          \`\`\`
          
          </details>
          
          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
